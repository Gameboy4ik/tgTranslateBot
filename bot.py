import telebot, config
from googletrans import Translator

bot = telebot.TeleBot(config.TOKEN, parse_mode=None) # creating bot
languages_list = config.LANGUAGES 
translator = Translator() # creating translator
language = ''
language_set = False 
restart_choosing_language = False
logged_in = False

def translating(message):
    global language, language_set
    if language_set == False: # if false user must choose the language the bot will translate into
        while language_set == False:
            # buttons with default languages
            if message.text == 'üá∑üá∫ RU': 
                language = 'ru'
                bot.send_message(message.chat.id, '–Ø–∑—ã–∫ –ø–µ—Ä–µ–≤–æ–¥–∞ <b>–†—É—Å—Å–∫–∏–π</b> —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω',
                    parse_mode='html', reply_markup=config.menu)
                language_set = True
            elif message.text == 'üá¨üáß EN':
                language = 'en'
                bot.send_message(message.chat.id, '–Ø–∑—ã–∫ –ø–µ—Ä–µ–≤–æ–¥–∞ <b>–ê–Ω–≥–ª–∏–π—Å–∫–∏–π</b> —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω',
                    parse_mode='html', reply_markup=config.menu)
                language_set = True
            elif message.text == 'üá∫üá¶ UA':
                language = 'uk'
                bot.send_message(message.chat.id, '–Ø–∑—ã–∫ –ø–µ—Ä–µ–≤–æ–¥–∞ <b>–£–∫—Ä–∞–∏–Ω—Å–∫–∏–π</b> —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.',
                    parse_mode='html', reply_markup=config.menu)
                language_set = True
            else: # if user don't choose language from buttons, bot will ask user to write a language 
                for key, msg in languages_list.items():
                    if msg == message.text.lower() or key == message.text.lower(): 
                        # if message in dictionary's keys or dictionary's values, language sets
                        language = languages_list[key]
                        bot.send_message(message.chat.id, f'<b>{language.title()}</b> —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.',
                            parse_mode='html', reply_markup=config.menu)
                        language_set = True
                if language_set == False and logged_in == True: # if message not in dictionary, while restart
                    bot.send_message(message.chat.id, '–¢–∞–∫–æ–≥–æ —è–∑—ã–∫–∞ –Ω–µ—Ç –≤ –Ω–∞—à–µ–π –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.'+
                        ' –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.')
                    break
    else: # if language already installed, bot just translate message and reply
        if message.text == 'Choose Different Language':
            language_set = False
            bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π —è–∑—ã–∫.')
        else:
            bot.send_message(message.chat.id,
                (translator.translate(message.text, language)).text)

@bot.message_handler(commands=['start'])
def welcome(message): # welcome function
    bot.send_message(message.chat.id,
        "üá¨üáß Choose the interface language:\nüá∫üá¶ –í–∏–±–µ—Ä—ñ—Ç—å –º–æ–≤—É —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É:\nüá∑üá∫ –í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞:",
        reply_markup=config.interface_language)



@bot.message_handler(content_types=['text'])
def interface(message):
    if message.text == 'üá∑üá∫ –†—É—Å—Å–∫–∏–π':
        config.interface = 'russian'
        bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç, —è –ø–æ–ø—Ä–æ–±—É—é –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ —Ç–≤–æ–∏ —Å–æ–æ–±—â–µ–Ω–∏—è.")
        bot.send_message(message.chat.id, "–ß—Ç–æ–±—ã —è –º–æ–≥ —Ä–∞–±–æ—Ç–∞—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω–æ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞,"+
            " –≤—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫, –Ω–∞ –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—Ç–∏—Ç–µ –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ —Ç–µ–∫—Å—Ç.", reply_markup=config.start_markup)
        bot.send_message(message.chat.id, "<b>P.S:</b> –ï—Å–ª–∏ –Ω—É–∂–Ω–æ–≥–æ –≤–∞–º —è–∑—ã–∫–∞ –Ω–µ –æ–∫–∞–∑–∞–ª–æ—Å—å"+
            " –≤ –≤–∞—Ä–∏–∞–Ω—Ç–∞—Ö –æ—Ç–≤–µ—Ç–∞, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —è–∑—ã–∫ –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏ –∏ —è –ø–æ—Å—Ç–∞—Ä–∞—é—Å—å –Ω–∞–π—Ç–∏ –µ–≥–æ.",
            parse_mode='html')
        logged_in = True
    elif message.text == 'üá¨üáß English':
        config.interface = 'english'
        bot.send_message(message.chat.id, "Hello, I'll try to translate your messages.")
        bot.send_message(message.chat.id, "So that I can work correctly, please select"+
            " the language you want to translate into.", reply_markup=config.start_markup)
        bot.send_message(message.chat.id, "<b>P.S:</b> If the language you need is not in"+
            " the answer options, please enter the language in the message and I'll try to find it.",
            parse_mode='html')
        logged_in = True
    elif message.text == 'üá∫üá¶ –£–∫—Ä–∞—ó–Ω—Å—å–∫–∞':
        config.interface = 'ukrainian'
        bot.send_message(message.chat.id, "–ü—Ä–∏–≤—ñ—Ç, —è —Å–ø—Ä–æ–±—É—é –ø–µ—Ä–µ–∫–ª–∞—Å—Ç–∏ —Ç–≤–æ—ó –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è.")
        bot.send_message(message.chat.id, "–©–æ–± —è –º—ñ–≥ –ø—Ä–∞—Ü—é–≤–∞—Ç–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ, –±—É–¥—å –ª–∞—Å–∫–∞,"+
            " –æ–±–µ—Ä—ñ—Ç—å –º–æ–≤—É, –Ω–∞ —è–∫—É —Ö–æ—á–µ—Ç–µ –ø–µ—Ä–µ–∫–ª–∞—Å—Ç–∏ —Ç–µ–∫—Å—Ç.", reply_markup=config.start_markup)
        bot.send_message(message.chat.id, "<b>P.S:</b> –Ø–∫—â–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ—ó –≤–∞–º –º–æ–≤–∏ –Ω–µ –≤–∏—è–≤–∏–ª–æ—Å—è"+
            " –≤ –≤–∞—Ä—ñ–∞–Ω—Ç–∞—Ö –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ, –±—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å –º–æ–≤—É –≤ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—ñ —ñ —è –ø–æ—Å—Ç–∞—Ä–∞—é—Å—è –∑–Ω–∞–π—Ç–∏ —ó—ó.",
            parse_mode='html')
        logged_in = True
    translating(message)


bot.infinity_polling()
